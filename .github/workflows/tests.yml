name: Run tests with workflow_call

on:
  workflow_call:
    inputs:
      fluence-env:
        description: "Fluence enviroment to run tests agains"
        type: string
        default: "local"
      nox-image:
        description: "nox image tag"
        type: string
        default: "fluencelabs/nox:unstable"
      fcli-version:
        description: "@fluencelabs/fcli version"
        type: string
        default: "main"
      ref:
        description: "GitHub ref to checkout to"
        type: string
        default: "main"

env:
  CI: true
  FORCE_COLOR: true
  NOX_IMAGE: "${{ inputs.nox-image }}"
  FLUENCE_ENV: "${{ inputs.fluence-env }}"
  CARGO_UNSTABLE_SPARSE_REGISTRY: true

jobs:
  aqua:
    name: "Run aqua tests"
    runs-on: builder

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Import secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          secrets: |
            kv/docker-registry/basicauth/ci username | DOCKER_USERNAME ;
            kv/docker-registry/basicauth/ci password | DOCKER_PASSWORD ;
            kv/npm-registry/basicauth/ci token | NODE_AUTH_TOKEN;

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/spell
          ref: ${{ inputs.ref }}

      - name: Setup node with self-hosted registry
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.fluence.dev"

      - name: Setup fcli
        uses: fluencelabs/setup-fluence@v1
        with:
          artifact: fcli
          version: ${{ inputs.fcli-version }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: docker.fluence.dev
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Pull nox image
        run: docker pull $NOX_IMAGE

      - name: Run nox network
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: ".github/e2e/docker-compose.yml"
          down-flags: "--volumes"

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: integration-tests/requirements.txt

      - name: Install python requirements
        run: pip install -r requirements.txt
        working-directory: integration-tests

      - run: fluence dep i

      - name: Check spell Aqua compiles
        run: fluence aqua --dry -i src/aqua/spell

      - name: Check installation-spell Aqua compiles
        run: fluence aqua --dry -i src/aqua/installation-spell

      - name: Check integration-tests Aqua compiles
        run: fluence aqua --dry -i integration-tests/aqua

      - name: Run aqua tests
        env:
          FLUENCE_USER_DIR: "${{ github.workspace }}/tmp/.fluence"
        run: pytest -n auto test_aqua.py
        working-directory: integration-tests

      - name: Print versions to check summary
        if: always()
        working-directory: integration-tests
        run: |
          cat <<SNAPSHOT >> $GITHUB_STEP_SUMMARY
          ## Used versions
          \`\`\`
          $(fluence dep v)
          \`\`\`
          SNAPSHOT

      - name: Dump container logs
        if: always()
        uses: jwalton/gh-docker-logs@v2

      - name: Remove tmp directory
        if: always()
        run: sudo rm -rf tmp
