name: Build snapshot

on:
  workflow_call:
    inputs:
      cargo-dependencies:
        description: "Cargo dependencies map"
        type: string
        default: "null"
      ref:
        description: "git ref to checkout to"
        type: string
        default: "main"
    outputs:
      cargo-version:
        description: "Cargo snapshot version"
        value: ${{ jobs.snapshot.outputs.cargo-version }}
      spell-version:
        description: "@fluencelabs/spell version"
        value: ${{ fromJson(jobs.snapshot.outputs.snapshots)['spell'] }}
      installation-spell-version:
        description: "@fluencelabs/installation-spell version"
        value: ${{ fromJson(jobs.snapshot.outputs.snapshots)['installation-spell'] }}
      spell-snapshots:
        description: "spell snapshots"
        value: ${{ jobs.snapshot.outputs.snapshots }}

env:
  CARGO_UNSTABLE_SPARSE_REGISTRY: true

jobs:
  snapshot:
    name: "Build snapshots"
    runs-on: builder
    timeout-minutes: 60

    outputs:
      cargo-version: "${{ steps.cargo-snapshot.outputs.version }}"
      snapshots: "${{ steps.snapshot.outputs.snapshots }}"

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          repository: fluencelabs/spell
          ref: ${{ inputs.ref }}

      - name: Import secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/cargo-registry/users/ci token | CARGO_REGISTRIES_FLUENCE_TOKEN;
            kv/npm-registry/basicauth/ci token | NODE_AUTH_TOKEN

      - name: Setup Rust toolchain
        uses: dsherret/rust-toolchain-file@v1

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: spell
          # github allows only 10GB of cache
          # so save cache only on merge to master
          # to use less space and speed up CI
          save-if: ${{ github.event_name == 'push' }}

      - name: Set dependencies
        if: inputs.cargo-dependencies != 'null'
        uses: fluencelabs/github-actions/cargo-set-dependency@main
        with:
          dependencies: ${{ inputs.cargo-dependencies }}
          path: src/spell/modules/spell

      - name: Generate snapshot version
        id: version
        uses: fluencelabs/github-actions/generate-snapshot-id@main

      - name: Setup marine
        uses: fluencelabs/setup-marine@v1
        with:
          artifact-name: marine

      - name: Build and package spell
        working-directory: ./src/spell/modules/spell/spell
        run: ./build.sh

      - name: Publish crate snapshots
        id: cargo-snapshot
        uses: fluencelabs/github-actions/cargo-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}
          path: src/spell/modules/spell

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.1
        with:
          version: 8

      - name: Setup node with self-hosted npm registry
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://npm.fluence.dev"
          cache: "pnpm"

      - name: Run pnpm i
        run: pnpm -r --no-frozen-lockfile i

      - name: Set package version
        run: node .github/scripts/ci.cjs bump-version ${{ steps.version.outputs.id }}

      - name: Publish npm snapshots
        id: snapshot
        uses: fluencelabs/github-actions/pnpm-publish-snapshot@main
        with:
          id: ${{ steps.version.outputs.id }}
          set-version: false
