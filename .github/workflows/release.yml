name: "publish-release"

on:
  push:
    tags:
      - "v*"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

jobs:
  release:
    name: "Publish"
    runs-on: builder

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Import secrets
        uses: hashicorp/vault-action@v2.4.3
        with:
          url: https://vault.fluence.dev
          path: jwt/github
          role: ci
          method: jwt
          jwtGithubAudience: "https://github.com/fluencelabs"
          jwtTtl: 300
          exportToken: false
          secrets: |
            kv/crates.io/fluencebot token | CARGO_REGISTRY_TOKEN

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Marine
        uses: baptiste0928/cargo-install@v1.3.0
        with:
          crate: marine

      - name: Build and package spell
        working-directory: ./src/spell/modules/spell
        run: ./build.sh

      - name: Install cargo-workspaces
        uses: baptiste0928/cargo-install@v1.3.0
        with:
          crate: cargo-workspaces

      - name: Publish to crates.io
        working-directory: ./src/spell/modules/spell
        run: |
          cargo ws publish \
            --filter 'fluence-spell-dtos,fluence-spell-distro'
            --no-git-commit \
            --from-git \
            --skip-published \
            --yes

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/workflows/changelog_config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          name: spell ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          files: |
            ./src/spell/modules/spell/artifacts/spell.tar.gz
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tar.gz URL
        id: package-url
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            try {
                let assets = await github.repos.listReleaseAssets({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: "${{ steps.release.outputs.id }}",
                });
                console.dir(assets);
                let package = assets.data.find((a) => a.name === 'spell.tar.gz');
                let url = package.browser_download_url;
                console.log("URL: " + url);
                return url;
            } catch (e) {
              console.log("Err: " + e);
              throw e;
            }

      - name: Calculate SHA256
        working-directory: ./src/spell/modules/spell/artifacts/
        run: |
          du -hs spell.tar.gz
          echo $(sha256sum spell.tar.gz)
          echo "SHA256=$(sha256sum spell.tar.gz | awk '{ print $1 }')" >> $GITHUB_ENV

#      - name: Update version in node-distro repo
#        uses: benc-uk/workflow-dispatch@v1
#        with:
#          workflow: update_service
#          repo: fluencelabs/node-distro
#          ref: 'main'
#          token: ${{ secrets.PERSONAL_TOKEN }}
#          inputs: '{
#            "name": "spell",
#            "version": "${{ env.RELEASE_VERSION }}",
#            "url": "${{ steps.package-url.outputs.result }}",
#            "sha256": "${{ env.SHA256 }}"
#          }'

      - name: Log notice
        run: echo "spell was released: ${{ env.RELEASE_VERSION }}" >> $GITHUB_STEP_SUMMARY
