name: 'test'

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/tests.yml'
      - '!.github/workflows/run-tests.yml'
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/tests.yml'
      - '!.github/workflows/run-tests.yml'

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  installation-spell:
    name: 'Check installation spell compiles'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: fluencelabs/spell
          ref: ${{ github.ref }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.1
        with:
          version: 8

      - name: Setup node with self-hosted npm registry
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.fluence.dev'
          cache: 'pnpm'

      - run: pnpm install -r

      - name: Setup Rust toolchain
        uses: dsherret/rust-toolchain-file@v1

      - name: Setup fcli
        uses: fluencelabs/setup-fluence@v1
        with:
          version: main

      - run: pnpm pack
        working-directory: ./src/aqua/spell

      - run: pnpm pack
        working-directory: ./src/aqua/installation-spell

      - run: fluence dep i

      - name: Check if aqua compiles
        run: fluence aqua --dry

  cargo:
    name: 'Run cargo tests'
    runs-on: builder
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v3
        with:
          repository: fluencelabs/spell
          ref: ${{ github.ref }}

      - name: Setup Rust toolchain
        uses: dsherret/rust-toolchain-file@v1

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: spell
          save-if: false

      - name: Setup cargo-nextest
        uses: taiki-e/install-action@nextest

      - name: Setup marine
        uses: fluencelabs/setup-marine@v1
        with:
          artifact-name: marine

      - name: Build and package spell
        working-directory: ./src/spell/modules/spell/spell
        run: ./build.sh

      - name: Run tests
        working-directory: ./src/spell/modules/spell/spell
        run: ./test.sh
